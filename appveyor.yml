# https://www.appveyor.com/docs/appveyor-yml/
#platform:
#- x64
#- x86

environment:
  matrix:
   #fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
   - platform: x86 
     PYTHON: "C:\\Python36"
     #PYTHON_VERSION: "3.6.x"
     #PYTHON_ARCH: "32" # these settings would produce _mappyscript.cp36-win32.pyd and then we'd get ModuleNotFoundError: No module named '_mappyscript'

   - platform: x64
     PYTHON: "C:\\Python36-x64"
     #PYTHON_VERSION: "3.6.x"
     #PYTHON_ARCH: "64"

   - platform: x86 
     PYTHON: "C:\\Python27"

   - platform: x64
     PYTHON: "C:\\Python27-x64"

   #
   # VS 2010
   #  - VS_VERSION: Visual Studio 10
   #
   # VS 2012
   #  - VS_VERSION: Visual Studio 11
   #
   # VS 2013
   #- VS_VERSION: Visual Studio 12
   
   # For Python versions available on Appveyor, see
   # http://www.appveyor.com/docs/installed-software#python
   # The list here is complete (excluding Python 2.6, which
   # isn't covered by this document) at the time of writing.
   
   # https://www.appveyor.com/docs/build-environment/#pre-installed-software
   
   
   #- PYTHON: "C:\\Python27-x64"
   #- PYTHON: "C:\\Python36"
   #- PYTHON: "C:\\Python36-x64"


install:
# We need wheel installed to build wheels
# See https://www.appveyor.com/docs/environment-variables/ for APPVEYOR_BUILD_FOLDER
- "%PYTHON%\\python --version"
- "%PYTHON%\\python.exe -m pip install -r %APPVEYOR_BUILD_FOLDER%\\requirements-dev.txt"

# see https://github.com/mapserver/mapserver/blob/branch-7-0/appveyor.yml

build_script:
  - echo build_script
  - if "%platform%" == "x64" SET VS_FULL=%VS_VERSION% Win64
  - if "%platform%" == "x86" SET VS_FULL=%VS_VERSION%
  - if "%platform%" == "x86" SET SDK=release-1800
  - if "%platform%" == "x64" SET SDK=release-1800-x64
  - echo "%VS_FULL%"
  - set SDK_ZIP=%SDK%-dev.zip
  - set SDK_URL=http://download.gisinternals.com/sdk/downloads/%SDK_ZIP%
  - echo "%SDK_ZIP%"
  - echo "%SDK_URL%"
  - mkdir sdk
  - cd sdk
  - appveyor DownloadFile "%SDK_URL%"
  - 7z x "%SDK_ZIP%" > nul
  - cd %SDK%
  - cd lib
  - copy libpng.lib libpng.lib.lib
  - cd ..
  - cd ..
  - cd ..
  - set SDK_PREFIX=%CD%\sdk\%SDK%
  - set SDK_INC=%CD%\sdk\%SDK%\include
  - set SDK_LIB=%CD%\sdk\%SDK%\lib
  - set SDK_BIN=%CD%\sdk\%SDK%\bin
  # - mklink /J %APPVEYOR_BUILD_FOLDER%\mappyscript\src %SDK_INC%
  #- robocopy %SDK_INC% %APPVEYOR_BUILD_FOLDER%\mappyscript\src /MIR
  #- ps: Get-ChildItem -Path "$env:SDK_INC" | Copy-Item -Destination "$env:APPVEYOR_BUILD_FOLDER\mappyscript\src" -Recurse -Container
  #- ps: Get-ChildItem -Path C:\projects\mappyscript\sdk\release-1800\include | Copy-Item -Destination C:\projects\mappyscript\mappyscript\src -Recurse -Container  
  #- dir %APPVEYOR_BUILD_FOLDER%\mappyscript\src
  - "%PYTHON%\\python --version"
  - "%PYTHON%\\python.exe -m pip list --format=columns"
  - "%PYTHON%\\python.exe setup.py build_ext --compiler=msvc --include-dirs=%SDK_INC% --library-dirs=%SDK_LIB%"

#build: off

test_script:
# Put your test command here.
# If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
# you can remove "build.cmd" from the front of the command, as it's
# only needed to support those cases.
# Note that you must use the environment variable %PYTHON% to refer to
# the interpreter you're using - Appveyor does not do anything special
# to put the Python version you want to use on PATH.
- set PATH=%SDK_BIN%;%PATH%
- dir  %APPVEYOR_BUILD_FOLDER%\mappyscript
- "cd %APPVEYOR_BUILD_FOLDER%"
- "%PYTHON%\\python.exe -m pip install -e ."
- "%PYTHON%\\python.exe -m pip list --format=columns"
- "%PYTHON%\\python.exe tests\\test.py"

after_test:
# This step builds your wheels.
# Again, you only need build.cmd if you're building C extensions for
# 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
# interpreter
- "cd %APPVEYOR_BUILD_FOLDER%"
- "%PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
# bdist_wheel puts your built wheel in the dist directory
- path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.